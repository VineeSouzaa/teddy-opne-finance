version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: teddy_finance_app_dev
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=teddy_user
      - DB_PASSWORD=teddy_password
      - DB_NAME=teddy_finance
    ports:
      - '3000:3000'
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - teddy_network
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: teddy_finance_db_dev
    environment:
      POSTGRES_DB: teddy_finance
      POSTGRES_USER: teddy_user
      POSTGRES_PASSWORD: teddy_password
    ports:
      - '5432:5432'
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    networks:
      - teddy_network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U teddy_user -d teddy_finance']
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: teddy_finance_pgadmin_dev
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@teddy.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - '5050:80'
    depends_on:
      - postgres
    networks:
      - teddy_network

volumes:
  postgres_data_dev:

networks:
  teddy_network:
    driver: bridge
