name: Docker CI/CD

on:
  push:
    branches: [main, develop]
    paths:
      - 'Dockerfile*'
      - 'docker-compose*.yml'
      - 'src/**'
      - 'package.json'
      - 'package-lock.json'
  pull_request:
    branches: [main, develop]
    paths:
      - 'Dockerfile*'
      - 'docker-compose*.yml'
      - 'src/**'
      - 'package.json'
      - 'package-lock.json'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: teddy-finance:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker image
        run: |
          docker run -d --rm -p 3000:3000 --name test-container teddy-finance:test
          timeout=0
          until curl -sSf http://localhost:3000/health || [ "$timeout" -eq 10 ]; do
            sleep 3
            timeout=$((timeout+1))
          done
          docker logs test-container || true
          docker stop test-container || true

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - name: Build image for security scan
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: teddy-finance:security-scan

      - name: Run Trivy scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: teddy-finance:security-scan
          format: sarif
          output: trivy-results.sarif

      - uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: trivy-results.sarif

  push:
    needs: [build, security]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  compose:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - name: Build image for Compose test
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: teddy-finance:compose-test

      - name: Test with Docker Compose
        run: |
          echo "Running docker-compose test..."
          docker compose -f docker-compose.test.yml up -d --wait

          echo "Waiting for health check..."
          docker compose exec -T app sh -c 'for i in {1..10}; do curl -sSf http://localhost:3000/health && exit 0 || sleep 3; done; exit 1'

          docker compose down --volumes
